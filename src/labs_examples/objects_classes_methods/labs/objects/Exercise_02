
Please demonstrate Object association by creating at least two POJOs and a Controller class. The Controller
class will contain the main() method. In the main() create an object of each POJO you just created and associate
the two together. (This is easier than it sounds. Refer to the Object Association documentation if you're not sure.)

object association
- relation between two separate classes which establishes through their Objects
- can be
    1 to 1
    1 to many
    many to 1
    many to many
- OOP: Object communicates to other Object to use functionality and services provided by that object

POJO
- plain old java object
- not bound by any special restriction other than those forced by Java
- does not require any class path
- used for increasing readability and re-usability of program

Example of POJO found on Google


// Employee POJO class to represent entity Employee
public class Employee
{
    // default field
    String name;

    // public field
    public String id;

    // private salary
    private double salary;

    //arg-constructor to initialize fields
    public Employee(String name, String id,
                             double salary)
    {
        this.name = name;
        this.id = id;
        this.salary = salary;
    }

    // getter method for name
    public String getName()
    {
        return name;
    }

    // getter method for id
    public String getId()
    {
        return id;
    }

    // getter method for salary
    public Double getSalary()
    {
        return salary;
    }
}


Controller
- controls flow of data
- controls data flow into model object and updates view whenever data changes

Example of object association from online lessons

public class Vehicle {
   String model;
    public Vehicle(String model){
        this.model = model;
    }
}
public class Person {
    String name;
    public Person(String name){
        this.name = name;
    }
}
public class PersonVehicleAssociation {
    Vehicle v = new Vehicle("XTerra");
    Person p = new Person("Kim");
    System.out.println(p.name + " drives an " + v.model);
}
Output: "Kim drives an XTerra"
